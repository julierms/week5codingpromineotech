// Creating a new drink

class Drink {
constructor(name, flavor) {
this.name = name;
this.flavor = flavor;
}

describe() {

return `${this.name} has these ${this.temperature}`;
}
}
class Boba {
constructor(name) {
this.name = name;
this.drinks =[];
}

addDrink(drink) {
if (drink instanceof drink) {
this.drinks.push(drink);
} else {
} throw new Error('You can only a boba drink. argument is not a drink: ${drink}');
 }


describe() {
return `${this.name} has these ${this.drinks.length} drinks.`; 
    }

class Menu { 
constructor() {
this.bobas = [];
this.selectedBoba = null; 
// manage one boba at a time
}

start() { 
let selection = this.showMainMenuOptions(); 
while (selection != 0) {
switch(selection) {
case '1' :
this.createBoba();
break;
case '2' :
this.viewBoba();
break;
case '3' :
this.deleteBoba();
break;
case '4' :
this.displaybobas();
break;
default:
selection = 0;
}
selection = this.showMainMenuOptions();
}
alert('Bye!');
}


showMainMenuOptions() {
return prompt(`
0) exit
1) create a boba drink
2) view boba drinks
3) delete a boba drink
4) display all bobas
`);
}

showBobaMenuOptions(bobaInfo) {
return prompt(`
0) back
1) add a new drink
2) delete a drink
-----------------
${bobaInfo}
`);
}

displayBobas() {
let bobaString = '';
for (let i = 0; i < this.bobas.length; i++) {
bobaString += i+ ') ' + this.bobas[i].name + '\n';
}
alert(bobaString);
}

createBoba() {
let name = prompt('Enter name for new boba drink: ');
this.bobas.push(new Boba(name));
}

viewBoba() {
let index = prompt("Enter the index for the boba you want to view:");
if (index > -1 && index < this.bobas.length) {
this.selectedBoba = this.bobas[index];
let description = 'Boba Name: ' + this.selectedBoba.name + '\n';
description += ' ' + this.selectedBoba.describe() + '\n ';
for (let i = 0; i < this.selectedBoba.drinks.length; i++) {

description += i + ') ' + this.selectedBoba.drinks[i].describe() + '\n';
}
let selection1 = this.showBobaMenuOptions(description);
switch (selection1) {
case '1' :
this.createDrink();
break;
case '2' :
this.deleteDrink();
}
}

deleteDrink() {
let index = prompt('Enter the index of the drink that you wish to delete: ');
if (index > -1 && index < this.bobas.length) {
this.bobas.splice(index,1);
}
}


createDrink() {
let name = prompt('Enter name for the drink: ');
let flavor = prompt('Enter flavor for new drink: ');

this.selectedBoba.addDrink(new Drink(name,flavor));
}

deleteDrink() {
let index = prompt('Enter the index of the drink that you wish to delete: ');
if (index > -1 && index < this.selectedBoba.drinks.length) { this.selectedBoba.drinks.splice(index,1);
}
}
}
let menu = new Menu();
menu.start();